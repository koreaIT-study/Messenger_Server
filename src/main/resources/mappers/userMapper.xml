<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 위 코드가 mapper 설정을 하는 코드 -->

<!-- Mapper를 사용하는 Repository의 전체 경로를 적어줘야함. -->
<mapper
	namespace="com.teamride.messenger.server.mapper.UserMapper">
	<select id="getAll" resultType="UserDTO">
		select * from USER
	</select>

	<select id="checkExistUser" resultType="Integer">
		select count(*) from
		USER
		where email = #{email}
	</select>

	<insert id="saveUser">
		INSERT INTO
		`messenger`.`USER`(`email`,`name`,`pwd`,`profile_img`)
		VALUES
		(#{email}, #{name}, #{pwd}, #{profilePath})
	</insert>

	<select id="getUserInfo" resultType="UserDTO">
		select
		*
		from
		USER
		where
		email =
		#{email} and pwd = #{pwd}
	</select>
	
	<select id="getUserInfoWithSocial" resultType="UserDTO">
		select
		*
		from
		USER
		where
		email =
		#{email}
	</select>

	<select id="getFriendList" resultType="FriendInfoDTO">
		select
			f.friend_id
			, u.email
			, u.name
			, ifnull(u.profile_path, '') profile_img
			, ifnull(m.ROOM_ID, '') ROOM_ID
		from FRIEND f
		join USER u
		on f.friend_id = u.id
		and f.user_id = #{userId}
		left join (
			select
				r.room_id
				, m.ID
			from C_ROOM r
			join C_ROOM_MEMBER m
				on r.room_id = m.ROOM_ID
				and r.is_group = 'N'
				and m.ID = #{userId}
		) m
		on u.id = m.ID
	</select>

	<select id="searchUser" resultType="UserDTO">
		SELECT 
			u.id
			, u.email 
			, u.name 
			, u.profile_path 
		FROM 
			`USER` u
		WHERE 
			u.email = #{searchKey}
			OR u.name = #{searchKey};
	</select>
</mapper>